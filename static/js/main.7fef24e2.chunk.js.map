{"version":3,"sources":["Buttons.js","ColorsMap.js","helper.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","_ref","handleColorClick","_jsxs","className","children","_jsx","style","background","onClick","ColorsMap","0","FontAwesomeIcon","icon","faBomb","color","fontSize","1","2","3","4","5","6","7","callSwal","title","text","button","dangerMode","swal","App","React","Component","constructor","super","num","guessInputs","secretCode","this","state","newGuessInputs","Object","assign","newuserInputs","userInput","copySecretCode","length","push","setState","forEach","i","includes","valueMatch","indexOf","indexMatch","handleDemineClick","history","numberOfAttempts","attempts","newHistory","handleClearClick","handleNewGameClick","fetchData","newGameState","colorMap","result","axios","get","data","split","filter","el","err","console","log","render","map","obj","idx","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7fef24e2.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Buttons({ handleColorClick }) {\n  return (\n    <div className=\"coloredButton\">\n      <button\n        className=\"buttons\"\n        style={{ background: \"blue\" }}\n        onClick={() => handleColorClick(\"0\")}\n      ></button>\n      <button\n        className=\"buttons\"\n        style={{ background: \"green\" }}\n        onClick={() => handleColorClick(\"1\")}\n      ></button>\n      <button\n        className=\"buttons\"\n        style={{ background: \"yellow\" }}\n        onClick={() => handleColorClick(\"2\")}\n      ></button>\n      <button\n        className=\"buttons\"\n        style={{ background: \"red\" }}\n        onClick={() => handleColorClick(\"3\")}\n      ></button>\n      <button\n        className=\"buttons\"\n        style={{ background: \"black\" }}\n        onClick={() => handleColorClick(\"4\")}\n      ></button>\n      <button\n        className=\"buttons\"\n        style={{ background: \"orange\" }}\n        onClick={() => handleColorClick(\"5\")}\n      ></button>\n      <button\n        className=\"buttons\"\n        style={{ background: \"purple\" }}\n        onClick={() => handleColorClick(\"6\")}\n      ></button>\n      <button\n        className=\"buttons\"\n        style={{ background: \"brown\" }}\n        onClick={() => handleColorClick(\"7\")}\n      ></button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBomb } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ColorsMap = {\n  0: <FontAwesomeIcon icon={faBomb} style={{ color: \"blue\", fontSize: \"40px\" }} />,\n  1: <FontAwesomeIcon icon={faBomb} style={{ color: \"green\", fontSize: \"40px\" }} />,\n  2: <FontAwesomeIcon icon={faBomb} style={{ color: \"yellow\", fontSize: \"40px\" }} />,\n  3: <FontAwesomeIcon icon={faBomb} style={{ color: \"red\", fontSize: \"40px\" }} />,\n  4: <FontAwesomeIcon icon={faBomb} style={{ color: \"black\", fontSize: \"40px\" }} />,\n  5: <FontAwesomeIcon icon={faBomb} style={{ color: \"orange\", fontSize: \"40px\" }} />,\n  6: <FontAwesomeIcon icon={faBomb} style={{ color: \"purple\", fontSize: \"40px\" }} />,\n  7: <FontAwesomeIcon icon={faBomb} style={{ color: \"brown\", fontSize: \"40px\" }} />,\n};\n\nexport default ColorsMap;","import swal from \"sweetalert\";\n\nexport const callSwal = (title, text, icon, button, dangerMode) => {\n  swal({\n    title,\n    text,\n    icon,\n    button,\n    dangerMode,\n  });\n};\n","import \"./App.css\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Buttons from \"./Buttons\";\nimport ColorsMap from \"./ColorsMap\";\nimport { callSwal } from \"./helper\";\n\nconst newGameText =\n  \"Our enemies have mined our bridge. As a military engineer, you have to de-mine the bridge. Try to guess the correct color and the correct order of the bombs. You have a total of 10 attemps. FEEDBACK: The RED number shows how many correct colors you have guessed and the BLUE number will show how many correct colors and their correct locations you have guessed. Are you ready?\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      guessInputs: {\n        userInput: [],\n        indexMatch: 0,\n        valueMatch: 0,\n      },\n      attempts: 0,\n      history: [],\n      secretCode: [],\n      colorMap: ColorsMap,\n    };\n  }\n\n  async fetchData() {\n    try {\n      const res = await axios.get(\n        \"https://www.random.org/integers/?num=4&min=0&max=7&col=1&base=10&format=plain&rnd=new\"\n      );\n      const result = res.data.split(\"\").filter((el) => el !== \"\\n\");\n      this.setState({\n        secretCode: result,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async componentDidMount() {\n    this.fetchData();\n  }\n\n  handleColorClick = (num) => {\n    const { guessInputs, secretCode } = this.state;\n    let newGuessInputs = Object.assign({}, guessInputs);\n    let newuserInputs = newGuessInputs.userInput;\n    let copySecretCode = [...secretCode];\n\n    if (guessInputs.userInput.length < 4) {\n      newuserInputs.push(num);\n      this.setState({ guessInputs: newGuessInputs });\n    } else {\n      return;\n    }\n\n    if (newuserInputs.length === 4) {\n      newuserInputs.forEach((num, i) => {\n        if (copySecretCode.includes(num)) {\n          newGuessInputs.valueMatch++;\n          copySecretCode[copySecretCode.indexOf(num)] = null;\n        }\n      });\n      this.setState({ guessInputs: newGuessInputs });\n\n      for (let i = 0; i < newuserInputs.length; i++) {\n        if (newuserInputs[i] === this.state.secretCode[i]) {\n          newGuessInputs.indexMatch++;\n        }\n        this.setState({ guessInputs: newGuessInputs });\n      }\n    }\n  };\n\n  handleDemineClick = () => {\n    const { guessInputs, history } = this.state;\n    let numberOfAttempts = this.state.attempts;\n    numberOfAttempts++;\n\n    if (numberOfAttempts === 10 && this.state.guessInputs.valueMatch !== 4) {\n      callSwal(\n        \"The bridge has exploded!\",\n        \"You let us down, Sapper...\",\n        \"error\",\n        \"I'm sorry, sir\"\n      );\n    } else if (\n      this.state.guessInputs.valueMatch === 4 &&\n      this.state.guessInputs.indexMatch === 4\n    ) {\n      callSwal(\n        \"The bridge is de-mined.\",\n        \"Congratulations, Sapper!\",\n        \"success\",\n        \"Glad to serve!\"\n      );\n    }\n\n    let newHistory = [...history, guessInputs];\n\n    if (guessInputs.userInput.length === 4) {\n      this.setState({\n        history: newHistory,\n        attempts: numberOfAttempts,\n      });\n      this.handleClearClick();\n    }\n  };\n\n  handleNewGameClick = () => {\n    callSwal(\n      \"Salute, Sapper! Here is the deal:\",\n      newGameText,\n      null,\n      \"Yes, sir!\",\n      true\n    );\n\n    this.fetchData();\n\n    let newGameState = {\n      guessInputs: {\n        userInput: [],\n        indexMatch: 0,\n        valueMatch: 0,\n      },\n      history: [],\n      attempts: 0,\n    };\n\n    this.setState({\n      guessInputs: newGameState.guessInputs,\n      history: newGameState.history,\n      attempts: newGameState.attempts,\n    });\n  };\n\n  handleClearClick = () => {\n    let resetObj = {\n      userInput: [],\n      indexMatch: 0,\n      valueMatch: 0,\n    };\n    this.setState({\n      guessInputs: resetObj,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"menu\">\n          <h2>DE-MINE A BRIDGE</h2>\n        </header>\n        <div className=\"menu\">\n          <button\n            className=\"new-game\"\n            onClick={() => this.handleNewGameClick()}\n          >\n            New Game\n          </button>\n          <button className=\"\" onClick={() => this.handleClearClick()}>\n            Clear\n          </button>\n          <button className=\"\" onClick={() => this.handleDemineClick()}>\n            De-mine\n          </button>\n        </div>\n        <div className=\"hints\">\n          <p style={{ color: \"DarkGreen\" }}>\n            {\" \"}\n            SAPPER, YOU HAVE {10 - this.state.attempts} ATTEMPTS LEFT\n          </p>\n          <p style={{ color: \"Black\" }}>\n            {\" \"}\n            (Hint: Red number shows correct colors and Blue number shows correct locations)\n          </p>\n        </div>\n\n        <div className=\"guessed-circles\">\n          {this.state.history.map((obj, i) => {\n            return (\n              <p key={i}>\n                {obj.userInput.map((num, idx) => {\n                  return <span key={idx}>{this.state.colorMap[num]}</span>;\n                })}\n                <span className=\"scores\" style={{ color: \"red\" }}>\n                  {obj.valueMatch}\n                </span>\n                <span className=\"scores\" style={{ color: \"blue\" }}>\n                  {obj.indexMatch}\n                </span>\n              </p>\n            );\n          })}\n        </div>\n\n        <div className=\"guessed-circles\">\n          {this.state.guessInputs.userInput.map((num, i) => {\n            return <span key={i}>{this.state.colorMap[num]}</span>;\n          })}\n        </div>\n\n        <Buttons handleColorClick={this.handleColorClick} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nreportWebVitals();\n"],"sourceRoot":""}
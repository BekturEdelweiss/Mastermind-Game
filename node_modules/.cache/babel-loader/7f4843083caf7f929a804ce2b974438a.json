{"ast":null,"code":"var _jsxFileName = \"/Users/bekturelebes/Mastermind-Game/mastermindgame/src/App.js\";\nimport \"./App.css\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport Buttons from \"./Buttons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleClick = num => {\n      const {\n        guessInputs,\n        secretCode\n      } = this.state;\n      let newGuessInputs = Object.assign({}, guessInputs);\n      let newuserInputs = newGuessInputs.userInput;\n      let copySecretCode = [...secretCode];\n\n      if (guessInputs.userInput.length < 4) {\n        newuserInputs.push(num);\n        this.setState({\n          guessInputs: newGuessInputs\n        });\n      } else {\n        return;\n      }\n\n      if (newuserInputs.length === 4) {\n        newuserInputs.forEach((num, i) => {\n          if (copySecretCode.includes(num)) {\n            newGuessInputs.valueMatch++;\n            copySecretCode[copySecretCode.indexOf(num)] = null;\n          }\n        });\n        this.setState({\n          guessInputs: newGuessInputs\n        });\n\n        for (let i = 0; i < newuserInputs.length; i++) {\n          if (newuserInputs[i] === this.state.secretCode[i]) {\n            newGuessInputs.indexMatch++;\n          }\n\n          this.setState({\n            guessInputs: newGuessInputs\n          });\n        }\n      }\n    };\n\n    this.handleCheckClick = () => {\n      const {\n        guessInputs,\n        history\n      } = this.state;\n      let numberOfAttempts = this.state.attempts;\n      numberOfAttempts++;\n\n      if (numberOfAttempts === 10 && this.state.guessInputs.valueMatch !== 4) {\n        return swal({\n          title: \"The bridge has exploded!\",\n          text: \"You let us down, Sapper...\",\n          icon: \"error\",\n          button: \"I'm sorry, sir\"\n        });\n      } else if (this.state.guessInputs.valueMatch === 4 && this.state.guessInputs.indexMatch === 4) {\n        return swal({\n          title: \"The bridge is de-mined.\",\n          text: \"Congratulations, Sapper!\",\n          icon: \"success\",\n          button: \"Glad to serve!\"\n        });\n      }\n\n      let newHistory = [...history, guessInputs];\n\n      if (guessInputs.userInput.length === 4) {\n        this.setState({\n          history: newHistory,\n          attempts: numberOfAttempts\n        });\n        this.handleClearClick();\n      }\n    };\n\n    this.handleNewGameClick = () => {\n      swal({\n        title: \"Salute, Sapper! Here is the deal:\",\n        text: \"Our enemies have mined our bridge. As a military engineer, you have to de-mine the bridge. Try to guess the correct color and the correct order of the bombs. You have a total of 10 attemps. FEEDBACK: The RED number shows how many correct colors you have guessed and the BLUE number will show how many correct colors and their correct locations you have guessed. Are you ready?\",\n        dangerMode: true,\n        button: \"Yes, sir!\"\n      });\n      this.fetchData();\n      let newGameState = {\n        guessInputs: {\n          userInput: [],\n          indexMatch: 0,\n          valueMatch: 0\n        },\n        history: [],\n        attempts: 0\n      };\n      this.setState({\n        guessInputs: newGameState.guessInputs,\n        history: newGameState.history,\n        attempts: newGameState.attempts\n      });\n    };\n\n    this.handleClearClick = () => {\n      let resetObj = {\n        userInput: [],\n        indexMatch: 0,\n        valueMatch: 0\n      };\n      this.setState({\n        guessInputs: resetObj\n      });\n    };\n\n    this.state = {\n      guessInputs: {\n        userInput: [],\n        indexMatch: 0,\n        valueMatch: 0\n      },\n      attempts: 0,\n      history: [],\n      secretCode: [],\n      colorMap: {\n        0: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-bomb\",\n          style: {\n            color: \"blue\",\n            fontSize: \"40px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this),\n        1: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-bomb\",\n          style: {\n            color: \"green\",\n            fontSize: \"40px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this),\n        2: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-bomb\",\n          style: {\n            color: \"yellow\",\n            fontSize: \"40px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this),\n        3: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-bomb\",\n          style: {\n            color: \"red\",\n            fontSize: \"40px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this),\n        4: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-bomb\",\n          style: {\n            color: \"black\",\n            fontSize: \"40px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this),\n        5: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-bomb\",\n          style: {\n            color: \"orange\",\n            fontSize: \"40px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this),\n        6: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-bomb\",\n          style: {\n            color: \"purple\",\n            fontSize: \"40px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this),\n        7: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-bomb\",\n          style: {\n            color: \"brown\",\n            fontSize: \"40px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }\n    };\n  }\n\n  async fetchData() {\n    try {\n      const res = await axios.get(\"https://www.random.org/integers/?num=4&min=0&max=7&col=1&base=10&format=plain&rnd=new\");\n      const result = res.data.split(\"\").filter(el => el !== \"\\n\");\n      this.setState({\n        secretCode: result\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    console.log(\"secretCode\", this.state.secretCode);\n    console.log(\"guessInputs\", this.state.guessInputs.userInput);\n    console.log(\"ATTEMPTS:\", this.state.attempts);\n    console.log(`history`, this.state.history);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"menu\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"DE-MINE A BRIDGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-game\",\n          onClick: () => this.handleNewGameClick(),\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\",\n          onClick: () => this.handleClearClick(),\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"\",\n          onClick: () => this.handleCheckClick(),\n          children: \"De-mine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"DarkGreen\"\n          },\n          children: [\" \", \"SAPPER, YOU HAVE \", 10 - this.state.attempts, \" ATTEMPTS LEFT\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guessed-circles\",\n        children: this.state.history.map((obj, i) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [obj.userInput.map((num, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: this.state.colorMap[num]\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 26\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"scores\",\n              style: {\n                color: \"red\"\n              },\n              children: obj.valueMatch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"scores\",\n              style: {\n                color: \"blue\"\n              },\n              children: obj.indexMatch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guessed-circles\",\n        children: this.state.guessInputs.userInput.map((num, i) => {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: this.state.colorMap[num]\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        handleClick: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n\n} // const mapStateToProps = (state) => {\n//   return {\n//     secretCode: state.secretCode,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // dispatching plain actions\n//     fetchNumbersfromApi: () => dispatch(fetchNumbersfromApi()),\n//   };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\nexport default App;","map":{"version":3,"sources":["/Users/bekturelebes/Mastermind-Game/mastermindgame/src/App.js"],"names":["React","axios","swal","Buttons","App","Component","constructor","handleClick","num","guessInputs","secretCode","state","newGuessInputs","Object","assign","newuserInputs","userInput","copySecretCode","length","push","setState","forEach","i","includes","valueMatch","indexOf","indexMatch","handleCheckClick","history","numberOfAttempts","attempts","title","text","icon","button","newHistory","handleClearClick","handleNewGameClick","dangerMode","fetchData","newGameState","resetObj","colorMap","color","fontSize","res","get","result","data","split","filter","el","err","console","log","componentDidMount","render","map","obj","idx"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport Buttons from \"./Buttons\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      guessInputs: {\n        userInput: [],\n        indexMatch: 0,\n        valueMatch: 0,\n      },\n      attempts: 0,\n      history: [],\n      secretCode: [],\n\n      colorMap: {\n        0: (\n          <i\n            className=\"fas fa-bomb\"\n            style={{ color: \"blue\", fontSize: \"40px\" }}\n          ></i>\n        ),\n        1: (\n          <i\n            className=\"fas fa-bomb\"\n            style={{ color: \"green\", fontSize: \"40px\" }}\n          ></i>\n        ),\n        2: (\n          <i\n            className=\"fas fa-bomb\"\n            style={{ color: \"yellow\", fontSize: \"40px\" }}\n          ></i>\n        ),\n        3: (\n          <i\n            className=\"fas fa-bomb\"\n            style={{ color: \"red\", fontSize: \"40px\" }}\n          ></i>\n        ),\n        4: (\n          <i\n            className=\"fas fa-bomb\"\n            style={{ color: \"black\", fontSize: \"40px\" }}\n          ></i>\n        ),\n        5: (\n          <i\n            className=\"fas fa-bomb\"\n            style={{ color: \"orange\", fontSize: \"40px\" }}\n          ></i>\n        ),\n        6: (\n          <i\n            className=\"fas fa-bomb\"\n            style={{ color: \"purple\", fontSize: \"40px\" }}\n          ></i>\n        ),\n        7: (\n          <i\n            className=\"fas fa-bomb\"\n            style={{ color: \"brown\", fontSize: \"40px\" }}\n          ></i>\n        ),\n      },\n    };\n  }\n\n  async fetchData() {\n    try {\n      const res = await axios.get(\n        \"https://www.random.org/integers/?num=4&min=0&max=7&col=1&base=10&format=plain&rnd=new\"\n      );\n      const result = res.data.split(\"\").filter((el) => el !== \"\\n\");\n      this.setState({\n        secretCode: result,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async componentDidMount() {\n    this.fetchData();\n  }\n\n  handleClick = (num) => {\n    const { guessInputs, secretCode } = this.state;\n    let newGuessInputs = Object.assign({}, guessInputs);\n    let newuserInputs = newGuessInputs.userInput;\n    let copySecretCode = [...secretCode];\n\n    if (guessInputs.userInput.length < 4) {\n      newuserInputs.push(num);\n      this.setState({ guessInputs: newGuessInputs });\n    } else {\n      return;\n    }\n    if (newuserInputs.length === 4) {\n      newuserInputs.forEach((num, i) => {\n        if (copySecretCode.includes(num)) {\n          newGuessInputs.valueMatch++;\n          copySecretCode[copySecretCode.indexOf(num)] = null;\n        }\n      });\n      this.setState({ guessInputs: newGuessInputs });\n\n      for (let i = 0; i < newuserInputs.length; i++) {\n        if (newuserInputs[i] === this.state.secretCode[i]) {\n          newGuessInputs.indexMatch++;\n        }\n        this.setState({ guessInputs: newGuessInputs });\n      }\n    }\n  };\n\n  handleCheckClick = () => {\n    const { guessInputs, history } = this.state;\n    let numberOfAttempts = this.state.attempts;\n    numberOfAttempts++;\n\n    if (numberOfAttempts === 10 && this.state.guessInputs.valueMatch !== 4) {\n      return swal({\n        title: \"The bridge has exploded!\",\n        text: \"You let us down, Sapper...\",\n        icon: \"error\",\n        button: \"I'm sorry, sir\",\n      });\n    } else if (\n      this.state.guessInputs.valueMatch === 4 &&\n      this.state.guessInputs.indexMatch === 4\n    ) {\n      return swal({\n        title: \"The bridge is de-mined.\",\n        text: \"Congratulations, Sapper!\",\n        icon: \"success\",\n        button: \"Glad to serve!\",\n      });\n    }\n\n    let newHistory = [...history, guessInputs];\n\n    if (guessInputs.userInput.length === 4) {\n      this.setState({\n        history: newHistory,\n        attempts: numberOfAttempts,\n      });\n      this.handleClearClick();\n    }\n  };\n\n  handleNewGameClick = () => {\n    swal({\n      title: \"Salute, Sapper! Here is the deal:\",\n      text:\n        \"Our enemies have mined our bridge. As a military engineer, you have to de-mine the bridge. Try to guess the correct color and the correct order of the bombs. You have a total of 10 attemps. FEEDBACK: The RED number shows how many correct colors you have guessed and the BLUE number will show how many correct colors and their correct locations you have guessed. Are you ready?\",\n      dangerMode: true,\n      button: \"Yes, sir!\",\n    });\n\n    this.fetchData();\n\n    let newGameState = {\n      guessInputs: {\n        userInput: [],\n        indexMatch: 0,\n        valueMatch: 0,\n      },\n      history: [],\n      attempts: 0,\n    };\n\n    this.setState({\n      guessInputs: newGameState.guessInputs,\n      history: newGameState.history,\n      attempts: newGameState.attempts,\n    });\n  };\n\n  handleClearClick = () => {\n    let resetObj = {\n      userInput: [],\n      indexMatch: 0,\n      valueMatch: 0,\n    };\n    this.setState({\n      guessInputs: resetObj,\n    });\n  };\n\n  render() {\n    console.log(\"secretCode\", this.state.secretCode);\n    console.log(\"guessInputs\", this.state.guessInputs.userInput);\n    console.log(\"ATTEMPTS:\", this.state.attempts);\n    console.log(`history`, this.state.history);\n    return (\n      <div className=\"App\">\n        <header className=\"menu\">\n          <h2>DE-MINE A BRIDGE</h2>\n        </header>\n        <div className=\"menu\">\n          <button\n            className=\"new-game\"\n            onClick={() => this.handleNewGameClick()}\n          >\n            New Game\n          </button>\n          <button className=\"\" onClick={() => this.handleClearClick()}>\n            Clear\n          </button>\n          <button className=\"\" onClick={() => this.handleCheckClick()}>\n            De-mine\n          </button>\n        </div>\n        <div className=\"menu\">\n          <p style={{ color: \"DarkGreen\" }}>\n            {\" \"}\n            SAPPER, YOU HAVE {10 - this.state.attempts} ATTEMPTS LEFT\n          </p>\n        </div>\n\n        <div className=\"guessed-circles\">\n          {this.state.history.map((obj, i) => {\n            return (\n              <p key={i}>\n                {obj.userInput.map((num, idx) => {\n                  return <span key={idx}>{this.state.colorMap[num]}</span>;\n                })}\n                <span className=\"scores\" style={{ color: \"red\" }}>\n                  {obj.valueMatch}\n                </span>\n                <span className=\"scores\" style={{ color: \"blue\" }}>\n                  {obj.indexMatch}\n                </span>\n              </p>\n            );\n          })}\n        </div>\n\n        <div className=\"guessed-circles\">\n          {this.state.guessInputs.userInput.map((num, i) => {\n            return <span key={i}>{this.state.colorMap[num]}</span>;\n          })}\n        </div>\n\n        <Buttons handleClick={this.handleClick} />\n      </div>\n    );\n  }\n}\n// const mapStateToProps = (state) => {\n//   return {\n//     secretCode: state.secretCode,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     // dispatching plain actions\n//     fetchNumbersfromApi: () => dispatch(fetchNumbersfromApi()),\n//   };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\nexport default App;\n"]},"metadata":{},"sourceType":"module"}